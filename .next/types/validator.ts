// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../src/app/(pages)/Ourclient/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/Ourclient">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/Ourclient/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/Ourstory/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/Ourstory">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/Ourstory/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/admin/addusers/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/addusers">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/admin/addusers/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/admin/manageusers/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/manageusers">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/admin/manageusers/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/admin/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/admin/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/admin/profile/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/profile/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/admin/profile/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/admin/profile/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/profile">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/admin/profile/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/hr/Profile/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/hr/Profile">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/hr/Profile/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/hr/addemployee/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/hr/addemployee">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/hr/addemployee/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/hr/dasborad/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/hr/dasborad">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/hr/dasborad/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/hr/employee-requests/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/hr/employee-requests">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/hr/employee-requests/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/hr/employee-requests/wfh/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/hr/employee-requests/wfh">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/hr/employee-requests/wfh/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/hr/leaves/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/hr/leaves">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/hr/leaves/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/hr/manage/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/hr/manage">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/hr/manage/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/hr/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/hr">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/hr/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/login">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/partnersprogram/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/partnersprogram">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/partnersprogram/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/signup/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/signup">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/signup/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/teamlead/leaves/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/teamlead/leaves">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/teamlead/leaves/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/teamlead/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/teamlead">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/teamlead/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/teamlead/profile/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/teamlead/profile">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/teamlead/profile/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/teamlead/teamrequests/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/teamlead/teamrequests">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/teamlead/teamrequests/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/teamlead/teamrequests/wfh/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/teamlead/teamrequests/wfh">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/teamlead/teamrequests/wfh/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/user/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/user">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/user/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/user/profile/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/user/profile">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/user/profile/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/user/request/leaves/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/user/request/leaves">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/user/request/leaves/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/user/request/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/user/request">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/user/request/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/user/request/whf/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/user/request/whf">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/user/request/whf/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(backend)/api/WFH/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/WFH">> = Specific
  const handler = {} as typeof import("../../src/app/(backend)/api/WFH/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(backend)/api/admin/adduser/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/adduser">> = Specific
  const handler = {} as typeof import("../../src/app/(backend)/api/admin/adduser/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(backend)/api/admin/deleteuser/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/deleteuser/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/(backend)/api/admin/deleteuser/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(backend)/api/admin/getusers/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/getusers/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/(backend)/api/admin/getusers/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(backend)/api/admin/getusers/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/getusers">> = Specific
  const handler = {} as typeof import("../../src/app/(backend)/api/admin/getusers/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(backend)/api/admin/protectedRoute/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/protectedRoute">> = Specific
  const handler = {} as typeof import("../../src/app/(backend)/api/admin/protectedRoute/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(backend)/api/admin/updateuser/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/updateuser/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/(backend)/api/admin/updateuser/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(backend)/api/auth/login/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/login">> = Specific
  const handler = {} as typeof import("../../src/app/(backend)/api/auth/login/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(backend)/api/auth/me/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/me">> = Specific
  const handler = {} as typeof import("../../src/app/(backend)/api/auth/me/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(backend)/api/auth/signup/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/signup">> = Specific
  const handler = {} as typeof import("../../src/app/(backend)/api/auth/signup/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(backend)/api/employees /count/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/employees /count">> = Specific
  const handler = {} as typeof import("../../src/app/(backend)/api/employees /count/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(backend)/api/employees /route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/employees ">> = Specific
  const handler = {} as typeof import("../../src/app/(backend)/api/employees /route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(backend)/api/hr/wfh/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/hr/wfh">> = Specific
  const handler = {} as typeof import("../../src/app/(backend)/api/hr/wfh/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(backend)/api/teamlead/profile/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/teamlead/profile">> = Specific
  const handler = {} as typeof import("../../src/app/(backend)/api/teamlead/profile/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(backend)/api/teamlead/wfh/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/teamlead/wfh">> = Specific
  const handler = {} as typeof import("../../src/app/(backend)/api/teamlead/wfh/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(backend)/api/teamled/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/teamled/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/(backend)/api/teamled/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(backend)/api/user/profile/request/leave/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/user/profile/request/leave">> = Specific
  const handler = {} as typeof import("../../src/app/(backend)/api/user/profile/request/leave/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(backend)/api/user/profile/request/wfh/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/user/profile/request/wfh">> = Specific
  const handler = {} as typeof import("../../src/app/(backend)/api/user/profile/request/wfh/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(backend)/api/user/profile/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/user/profile">> = Specific
  const handler = {} as typeof import("../../src/app/(backend)/api/user/profile/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/connect/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/connect">> = Specific
  const handler = {} as typeof import("../../src/app/api/connect/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../src/app/(pages)/admin/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/admin">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/admin/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/hr/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/hr">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/hr/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/teamlead/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/teamlead">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/teamlead/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(pages)/user/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/user">> = Specific
  const handler = {} as typeof import("../../src/app/(pages)/user/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
