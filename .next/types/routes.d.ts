// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/Ourclient" | "/Ourstory" | "/admin" | "/admin/addusers" | "/admin/manageusers" | "/hr" | "/hr/dasborad" | "/login" | "/partnersprogram" | "/signup" | "/teamlead" | "/teamlead/profile" | "/user" | "/user/profile"
type AppRouteHandlerRoutes = "/api/admin/adduser" | "/api/admin/deleteuser/[id]" | "/api/admin/getusers" | "/api/admin/protectedRoute" | "/api/auth/login" | "/api/auth/me" | "/api/auth/signup" | "/api/connect" | "/api/teamlead/profile" | "/api/teamled/[id]" | "/api/user/profile"
type PageRoutes = never
type LayoutRoutes = "/" | "/admin" | "/teamlead" | "/user"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin": {}
  "/admin/addusers": {}
  "/admin/manageusers": {}
  "/api/admin/adduser": {}
  "/api/admin/deleteuser/[id]": { "id": string; }
  "/api/admin/getusers": {}
  "/api/admin/protectedRoute": {}
  "/api/auth/login": {}
  "/api/auth/me": {}
  "/api/auth/signup": {}
  "/api/connect": {}
  "/api/teamlead/profile": {}
  "/api/teamled/[id]": { "id": string; }
  "/api/user/profile": {}
  "/hr": {}
  "/hr/dasborad": {}
  "/login": {}
  "/Ourclient": {}
  "/Ourstory": {}
  "/partnersprogram": {}
  "/signup": {}
  "/teamlead": {}
  "/teamlead/profile": {}
  "/user": {}
  "/user/profile": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/admin": never
  "/teamlead": never
  "/user": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
